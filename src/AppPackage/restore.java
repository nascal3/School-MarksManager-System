package AppPackage;


import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author home
 */
public class restore extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form Undelete
     */
    public restore() {
        initComponents();
        txt_studentID.setVisible(false);
        txt_studentAdmin.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel26 = new javax.swing.JLabel();
        txt_searchStudentRestore = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_studentRestore = new javax.swing.JTable();
        txt_studentID = new javax.swing.JTextField();
        btn_studentUndelete = new javax.swing.JButton();
        txt_studentAdmin = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Restore Items");
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon\\favicon.png"));
        setResizable(false);

        jLabel26.setText("Search student:");

        txt_searchStudentRestore.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchStudentRestoreKeyReleased(evt);
            }
        });

        tbl_studentRestore.setAutoCreateRowSorter(true);
        tbl_studentRestore.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Admin No", "Name", "Gender", "Form", "House"
            }
        ));
        tbl_studentRestore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_studentRestoreMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_studentRestore);

        btn_studentUndelete.setBackground(new java.awt.Color(43, 255, 46));
        btn_studentUndelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/recycleIcon.png"))); // NOI18N
        btn_studentUndelete.setText("Restore student");
        btn_studentUndelete.setEnabled(false);
        btn_studentUndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentUndeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_searchStudentRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 57, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_studentID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_studentAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_studentUndelete)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txt_searchStudentRestore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_studentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_studentAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btn_studentUndelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(400, 469));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchStudentRestoreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchStudentRestoreKeyReleased
        // search member to borrow:

        try {
            conn=connect.ConnecrDb();
            String sql = "select id,admin_nos as 'Admin No',name as 'Name',gender as 'Gender',class as 'Form',house as 'House' "
                    + "from students_arc where name like ? or admin_nos like ? order by admin_nos asc ";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+txt_searchStudentRestore.getText()+"%");
            pst.setString(2, "%"+txt_searchStudentRestore.getText()+"%");
            
            rs=pst.executeQuery();
            tbl_studentRestore.setModel(DbUtils.resultSetToTableModel(rs));
            tbl_studentRestore.removeColumn(tbl_studentRestore.getColumnModel().getColumn(0));
            
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );
            tbl_studentRestore.getColumnModel().getColumn(0).setHeaderRenderer(centerRenderer);
            tbl_studentRestore.getColumnModel().getColumn(1).setHeaderRenderer(centerRenderer);
            tbl_studentRestore.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
            tbl_studentRestore.getColumnModel().getColumn(2).setHeaderRenderer(centerRenderer);
            tbl_studentRestore.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
            tbl_studentRestore.getColumnModel().getColumn(3).setHeaderRenderer(centerRenderer);
            tbl_studentRestore.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
            tbl_studentRestore.getColumnModel().getColumn(4).setHeaderRenderer(centerRenderer);
            tbl_studentRestore.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
            

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, ex+" prob3");
        }finally{
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_txt_searchStudentRestoreKeyReleased

    private void tbl_studentRestoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_studentRestoreMouseClicked
        // select and grab info of member from search table
        try{
            conn=connect.ConnecrDb();
            int row = tbl_studentRestore.getSelectedRow();
            String id = tbl_studentRestore.getModel().getValueAt(row, 0).toString();
            String sql = "select * from students_arc where id="+id+" ";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            if(rs.next()){
                String add1 = rs.getString("id");
                txt_studentID.setText(add1);
                String add2 = rs.getString("admin_nos");
                txt_studentAdmin.setText(add2);
                btn_studentUndelete.setEnabled(true);

            }

        }catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null, e+" prob4");
        }finally{
            try {

                rs.close();
                conn.close();
                pst.close();

            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }

       //fillBorowedList();
    }//GEN-LAST:event_tbl_studentRestoreMouseClicked

    private void btn_studentUndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentUndeleteActionPerformed
          // restore student
      int p;
      p=JOptionPane.showConfirmDialog(null, "Are you sure you want to restore this student?");
      if(p==0){ 
        
        try{
            String sql = "INSERT INTO students select id,name,admin_nos,gender,dob,kcpe_marks,kcpe_year,birth_cert,"
                    + "class,class_name,house,pic,state from students_arc where id =? ";
                        conn=connect.ConnecrDb(); 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, txt_studentID.getText());
                        pst.execute();                 
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
        //insert deletion(deactivation) of member event into log
        undeletePersonLog(txt_studentAdmin.getText());
        //restore deleted student record from table "students_arc"
        restoreStudent();
        txt_studentID.setText("");
        txt_studentAdmin.setText("");
        fillMemberEditSearchList();
        
     }
    }//GEN-LAST:event_btn_studentUndeleteActionPerformed

    //delete student record from table "students_arc"
    public void restoreStudent(){
    
    try{
            String sql = "delete from students_arc where id =? ";
                        conn=connect.ConnecrDb(); 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, txt_studentID.getText());
                        pst.execute();           
                        
            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
    
}
       
    public void fillMemberEditSearchList(){
        
        try {
             conn=connect.ConnecrDb();
            String sql = "select id,admin_nos as 'Admin No',name as 'Name',gender as 'Gender',class as 'Form',house as 'House' "
                    + "from students_arc where state='Inactive' and name like ? or admin_nos like ? order by name asc ";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+txt_searchStudentRestore.getText()+"%");
            pst.setString(2, "%"+txt_searchStudentRestore.getText()+"%");

            rs=pst.executeQuery();
            tbl_studentRestore.setModel(DbUtils.resultSetToTableModel(rs));
            tbl_studentRestore.removeColumn(tbl_studentRestore.getColumnModel().getColumn(0));
        
      } catch (SQLException | ClassNotFoundException ex) {
          JOptionPane.showMessageDialog(null, ex+" prob1");
      }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
       }
        
    }
    
        
    public void undeletePersonLog(String person){
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal2 = Calendar.getInstance();
        String Currdate = (dateFormat2.format(cal2.getTime())); //2014-08-06
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String CurrtimeStamp = (dateFormat.format(cal.getTime())); //2014-08-06 16:00:22
        
       try{
            //save member entry event 
           String logit = "insert into system_log (date,event_date,user,event)values(?,?,?,?)"; 
           conn=connect.ConnecrDb(); 
           pst=conn.prepareStatement(logit);
           pst.setString(1, Currdate);
           pst.setString(2, CurrtimeStamp);
           pst.setString(3, user);
           pst.setString(4, "Undeletion of student with admin ID '"+person+"' from database.");
           pst.execute();
           
       }catch(ClassNotFoundException | SQLException ex){
          JOptionPane.showMessageDialog(null, ex); 
       }finally {
            try {
                conn.close();
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
      }
   }
    
    String user = login.txt_loginUsername.getText();
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(restore.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new restore().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_studentUndelete;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tbl_studentRestore;
    private javax.swing.JTextField txt_searchStudentRestore;
    private javax.swing.JTextField txt_studentAdmin;
    public static javax.swing.JTextField txt_studentID;
    // End of variables declaration//GEN-END:variables
}
