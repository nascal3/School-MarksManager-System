package AppPackage;


import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author home
 */
public class ManageUsers extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form ManageUsers
     */
    public ManageUsers() {
        initComponents();
        fillUsersList();
        txt_userID.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        changeUsername = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_users = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        combo_userUserType = new javax.swing.JComboBox();
        btn_saveUser = new javax.swing.JButton();
        txt_userPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        txt_userFullName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_userUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        combo_userUserTypeEdit = new javax.swing.JComboBox();
        btn_userEditSave = new javax.swing.JButton();
        txt_userPasswordEdit = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        txt_userFullNameEdit = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_userUsernameEdit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txt_userID = new javax.swing.JTextField();
        btn_deleteUser = new javax.swing.JButton();
        radio_keepUsername = new javax.swing.JRadioButton();
        radio_changeUsername = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Users");
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon\\task.png"));
        setResizable(false);

        tbl_users.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Subject"
            }
        ));
        tbl_users.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_usersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_users);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add new user", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel1.setEnabled(false);

        combo_userUserType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "English", "Kiswahili", "Physics", "Chemistry", "Geography", "Maths", "Biology", "Agriculture", "History", "Business", "CRE" }));

        btn_saveUser.setBackground(new java.awt.Color(2, 176, 219));
        btn_saveUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btn_saveUser.setText("Save new user");
        btn_saveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveUserActionPerformed(evt);
            }
        });

        jLabel2.setText("Password:");

        jLabel1.setText("Full name:");

        jLabel4.setText("User type:");

        jLabel3.setText("Username:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_userPassword)
                            .addComponent(btn_saveUser)
                            .addComponent(combo_userUserType, 0, 209, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_userFullName, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(txt_userUsername))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_userFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_userUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_userPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_userUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_saveUser, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit user", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel2.setEnabled(false);

        combo_userUserTypeEdit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "English", "Kiswahili", "Physics", "Chemistry", "Geography", "Maths", "Biology", "Agriculture", "History", "Business", "CRE" }));
        combo_userUserTypeEdit.setEnabled(false);

        btn_userEditSave.setBackground(new java.awt.Color(43, 255, 46));
        btn_userEditSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/saveEdit.png"))); // NOI18N
        btn_userEditSave.setText("Save edit");
        btn_userEditSave.setEnabled(false);
        btn_userEditSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_userEditSaveActionPerformed(evt);
            }
        });

        txt_userPasswordEdit.setEnabled(false);

        jLabel5.setText("Password:");

        txt_userFullNameEdit.setEnabled(false);

        jLabel6.setText("Full name:");

        jLabel7.setText("User type:");

        txt_userUsernameEdit.setEnabled(false);

        jLabel8.setText("Username:");

        btn_deleteUser.setBackground(new java.awt.Color(255, 0, 0));
        btn_deleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btn_deleteUser.setText("Delete user");
        btn_deleteUser.setEnabled(false);
        btn_deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteUserActionPerformed(evt);
            }
        });

        changeUsername.add(radio_keepUsername);
        radio_keepUsername.setSelected(true);
        radio_keepUsername.setText("Keep username");
        radio_keepUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_keepUsernameActionPerformed(evt);
            }
        });

        changeUsername.add(radio_changeUsername);
        radio_changeUsername.setText("Change username");
        radio_changeUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_changeUsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_userFullNameEdit))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radio_keepUsername)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radio_changeUsername))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(txt_userUsernameEdit))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_userID, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_userPasswordEdit)
                            .addComponent(combo_userUserTypeEdit, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_userEditSave, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(btn_deleteUser)))))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_userFullNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_userUsernameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_keepUsername)
                    .addComponent(radio_changeUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_userPasswordEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_userUserTypeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_userEditSave, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_deleteUser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_userID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(696, 550));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveUserActionPerformed
        // add category:
        try{

            if(txt_userFullName.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in users full name!","Attention",JOptionPane.ERROR_MESSAGE);
            }else if(txt_userUsername.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in a username!","Attention",JOptionPane.ERROR_MESSAGE);
            }else if(txt_userPassword.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in a password!","Attention",JOptionPane.ERROR_MESSAGE);
            }else{
                //check if book category is duplicated
                String sqlx = "select * from users where username=? ";
                conn=connect.ConnecrDb();
                pst = conn.prepareStatement(sqlx);
                pst.setString(1, txt_userUsername.getText());
                rs = pst.executeQuery();

                if(rs.next()){
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, "The username '"+txt_userUsername.getText()+"' is already registered!","Attention",JOptionPane.ERROR_MESSAGE);
                }else{
                    //save class info to system
                    String sql = "insert into users (full_name,username,password,subject)values(?,?,?,?)";
                    conn=connect.ConnecrDb();
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, txt_userFullName.getText());
                    pst.setString(2, txt_userUsername.getText());
                    pst.setString(3, txt_userPassword.getText());
                    pst.setString(4, combo_userUserType.getSelectedItem().toString());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "New user added.","Information",JOptionPane.INFORMATION_MESSAGE);
                    

                }
            }

        }catch(HeadlessException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
        //insert book save event tot log
        saveUserLog(txt_userFullName.getText(), txt_userUsername.getText());
        txt_userFullName.setText("");
        txt_userUsername.setText("");
        txt_userPassword.setText("");        
        fillUsersList();
        
    }//GEN-LAST:event_btn_saveUserActionPerformed

    private void tbl_usersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_usersMouseClicked
        try{
            conn=connect.ConnecrDb();
            int row = tbl_users.getSelectedRow();
            String id = tbl_users.getModel().getValueAt(row, 0).toString();
            String sql = "select * from users where id="+id+" ";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            if(rs.next()){
                String add1 = rs.getString("id");
                txt_userID.setText(add1);
                String add2 = rs.getString("full_name");
                txt_userFullNameEdit.setText(add2);
                String add3 = rs.getString("username");
                txt_userUsernameEdit.setText(add3);
                String add4 = rs.getString("password");
                txt_userPasswordEdit.setText(add4);
                String add5 = rs.getString("subject");
                combo_userUserTypeEdit.setSelectedItem(add5);
                           
                
               txt_userFullNameEdit.setEnabled(true);
               //txt_userUsernameEdit.setEnabled(true);
               txt_userPasswordEdit.setEnabled(true);
               combo_userUserTypeEdit.setEnabled(true);       
               btn_userEditSave.setEnabled(true);
               btn_deleteUser.setEnabled(true);
            }

        }catch(ClassNotFoundException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_tbl_usersMouseClicked

    private void btn_userEditSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_userEditSaveActionPerformed
        //edit user information
        try{

            if(txt_userFullNameEdit.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in users full name!","Attention",JOptionPane.ERROR_MESSAGE);
            }else if(txt_userUsernameEdit.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in a username!","Attention",JOptionPane.ERROR_MESSAGE);
            }else if(txt_userPasswordEdit.getText().isEmpty()){
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "Please fill in a password!","Attention",JOptionPane.ERROR_MESSAGE);
            }else{
                
                    
              if(username.equals("change")){
                        
                 //check if book category is duplicated
                String sqlx = "select * from users where username=? ";
                conn=connect.ConnecrDb();
                pst = conn.prepareStatement(sqlx);
                pst.setString(1, txt_userUsernameEdit.getText());
                rs = pst.executeQuery();

                if(rs.next()){
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, "The username '"+txt_userUsernameEdit.getText()+"' is already registered!","Attention",JOptionPane.ERROR_MESSAGE);
                }else{   
                        
                    //save class info to system
                    String sql = "update users set full_name=?,username=?,password=?,subject=? where id=? ";
                    conn=connect.ConnecrDb();
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, txt_userFullNameEdit.getText());
                    pst.setString(2, txt_userUsernameEdit.getText());
                    pst.setString(3, txt_userPasswordEdit.getText());
                    pst.setString(4, combo_userUserTypeEdit.getSelectedItem().toString());
                    pst.setString(5, txt_userID.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "User information edited!.","Information",JOptionPane.INFORMATION_MESSAGE);
                  } 
                
                }else if(username.equals("keep")){
                        //save class info to system
                        
                        
                        
                    String sql = "update users set full_name=?,password=?,subject=? where id=? ";
                    conn=connect.ConnecrDb();
                    pst=conn.prepareStatement(sql);
                    pst.setString(1, txt_userFullNameEdit.getText());
                    pst.setString(2, txt_userPasswordEdit.getText());
                    pst.setString(3, combo_userUserTypeEdit.getSelectedItem().toString());
                    pst.setString(4, txt_userID.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "User information edited!.","Information",JOptionPane.INFORMATION_MESSAGE);
                 }

                
            }

        }catch(HeadlessException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
        //insert book save event tot log
        editUserLog(txt_userFullNameEdit.getText(), txt_userUsernameEdit.getText());
        txt_userFullNameEdit.setText("");
        txt_userUsernameEdit.setText("");
        txt_userPasswordEdit.setText(""); 
        txt_userID.setText(""); 
        fillUsersList();
    }//GEN-LAST:event_btn_userEditSaveActionPerformed

    private void radio_changeUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_changeUsernameActionPerformed
        username = "change";
        txt_userUsernameEdit.setEnabled(true);
    }//GEN-LAST:event_radio_changeUsernameActionPerformed

    private void radio_keepUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_keepUsernameActionPerformed
        username = "keep";
        txt_userUsernameEdit.setEnabled(false);
    }//GEN-LAST:event_radio_keepUsernameActionPerformed

    private void btn_deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteUserActionPerformed
         // delete/deactivate member
      int p;
      p=JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?");
      if(p==0){ 
        
        try{
            String sql = "delete from users where id =? ";
                        conn=connect.ConnecrDb(); 
                        pst=conn.prepareStatement(sql);
                        pst.setString(1, txt_userID.getText());
                        pst.execute();           
                            
        }catch(ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally {
            try {
                rs.close();
                conn.close();
                pst.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
        
        //insert book save event tot log
        deleteUserLog(txt_userFullNameEdit.getText(), txt_userUsernameEdit.getText());
        txt_userFullNameEdit.setText("");
        txt_userUsernameEdit.setText("");
        txt_userPasswordEdit.setText(""); 
        txt_userID.setText(""); 
        combo_userUserTypeEdit.removeAllItems();
        fillUsersList();
        
     }
    }//GEN-LAST:event_btn_deleteUserActionPerformed

    public void fillUsersList(){
        
        try {
          conn=connect.ConnecrDb();
          String sql = "select id,full_name as 'Name',username as 'Username',subject as 'User subject' from users order by name asc ";
         pst=conn.prepareStatement(sql);
                            
         rs=pst.executeQuery();
         tbl_users.setModel(DbUtils.resultSetToTableModel(rs));
         tbl_users.removeColumn(tbl_users.getColumnModel().getColumn(0));
        
      } catch (SQLException | ClassNotFoundException ex) {
          JOptionPane.showMessageDialog(null, ex+" fourth errox");
      }finally {
            try {
                conn.close();
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
       }
        
    }
    
    public void saveUserLog(String person, String username){
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal2 = Calendar.getInstance();
        String Currdate = (dateFormat2.format(cal2.getTime())); //2014-08-06
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String CurrtimeStamp = (dateFormat.format(cal.getTime())); //2014-08-06 16:00:22
        
       try{
            //save member entry event 
           String logit = "insert into system_log (date,event_date,user,event)values(?,?,?,?)"; 
           conn=connect.ConnecrDb(); 
           pst=conn.prepareStatement(logit);
           pst.setString(1, Currdate);
           pst.setString(2, CurrtimeStamp);
           pst.setString(3, user);
           pst.setString(4, "Inserted new user named '"+person+"' with username '"+username+"' into database.");
           pst.execute();
           
       }catch(ClassNotFoundException | SQLException ex){
          JOptionPane.showMessageDialog(null, ex); 
       }finally {
            try {
                conn.close();
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
      }
   }
    
    public void editUserLog(String person, String username){
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal2 = Calendar.getInstance();
        String Currdate = (dateFormat2.format(cal2.getTime())); //2014-08-06
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String CurrtimeStamp = (dateFormat.format(cal.getTime())); //2014-08-06 16:00:22
        
       try{
            //save member entry event 
           String logit = "insert into system_log (date,event_date,user,event)values(?,?,?,?)"; 
           conn=connect.ConnecrDb(); 
           pst=conn.prepareStatement(logit);
           pst.setString(1, Currdate);
           pst.setString(2, CurrtimeStamp);
           pst.setString(3, user);
           pst.setString(4, "User edited, named '"+person+"' with username '"+username+"' in database.");
           pst.execute();
           
       }catch(ClassNotFoundException | SQLException ex){
          JOptionPane.showMessageDialog(null, ex); 
       }finally {
            try {
                conn.close();
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
      }
   }
    
    public void deleteUserLog(String person, String username){
        DateFormat dateFormat2 = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal2 = Calendar.getInstance();
        String Currdate = (dateFormat2.format(cal2.getTime())); //2014-08-06
        
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Calendar cal = Calendar.getInstance();
        String CurrtimeStamp = (dateFormat.format(cal.getTime())); //2014-08-06 16:00:22
        
       try{
            //save member entry event 
           String logit = "insert into system_log (date,event_date,user,event)values(?,?,?,?)"; 
           conn=connect.ConnecrDb(); 
           pst=conn.prepareStatement(logit);
           pst.setString(1, Currdate);
           pst.setString(2, CurrtimeStamp);
           pst.setString(3, user);
           pst.setString(4, "Delete user named '"+person+"' with username '"+username+"' from database.");
           pst.execute();
           
       }catch(ClassNotFoundException | SQLException ex){
          JOptionPane.showMessageDialog(null, ex); 
       }finally {
            try {
                conn.close();
                pst.close();
                rs.close();
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
      }
   }
    
    String user = login.txt_loginUsername.getText();
    String username = "keep";
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageUsers().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_deleteUser;
    private javax.swing.JButton btn_saveUser;
    private javax.swing.JButton btn_userEditSave;
    private javax.swing.ButtonGroup changeUsername;
    private javax.swing.JComboBox combo_userUserType;
    private javax.swing.JComboBox combo_userUserTypeEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radio_changeUsername;
    private javax.swing.JRadioButton radio_keepUsername;
    private javax.swing.JTable tbl_users;
    private javax.swing.JTextField txt_userFullName;
    private javax.swing.JTextField txt_userFullNameEdit;
    private javax.swing.JTextField txt_userID;
    private javax.swing.JPasswordField txt_userPassword;
    private javax.swing.JPasswordField txt_userPasswordEdit;
    private javax.swing.JTextField txt_userUsername;
    private javax.swing.JTextField txt_userUsernameEdit;
    // End of variables declaration//GEN-END:variables
}
